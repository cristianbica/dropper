#!/usr/bin/env ruby
require 'gli'

include GLI::App

program_desc 'Dropper is a management solution for your DigitalOcean cloud'
sort_help :manually

flag [:a,:account], desc: "DigitalOcean account", default_value: "default", arg_name: "account"
switch [:i, :interactive], desc: "Run in interactive mode and Droppper will ask you for the parameters", default: false

%w(droppper-cmd droppper-cli droppper-console).each do |gem_name|
  begin
    if the_gem = Gem::Specification.find_by_name(gem_name)
      gem_commands_path = the_gem.gem_dir + "/lib/" + gem_name.gsub("-","/") + "/commands"
      commands_from gem_commands_path
    end
  rescue Gem::LoadError
  end
end

version Gem::Specification.find_by_name("droppper-cmd").version

pre do |global,command,options,args|
  account = Droppper::Cmd::Config.instance.accounts[global[:a]] || Droppper::Cmd::Config.instance.default_account
  raise "You must have at least one account" unless account
  Droppper.client = Droppper::Client.new(account: account)
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
